<!DOCTYPE html>
<html>
	<link rel="stylesheet" href="styles/jqx.base.css" type="text/css" />
	<style type="text/css">
        .green
        {
            background-color: #FFFF99;
            
        }
    </style>
	<script src="js/jquery-2.1.4.min.js"></script>
	<script src="js/jqx/jqxcore.js"></script>
	<script src="js/jqx/jqxbuttons.js"></script>
	<script src="js/jqx/jqxmenu.js"></script>
	<script src="js/jqx/jqxlistbox.js"></script>
	<script src="js/jqx/jqxdropdownlist.js"></script>
	<script src="js/jqx/jqxgrid.js"></script>
	<script src="js/jqx/jqxgrid.columnsreorder.js"></script>
	<script src="js/jqx/jqxgrid.columnsresize.js"></script>
	<script src="js/jqx/jqxgrid.filter.js"></script>
	<script src="js/jqx/jqxgrid.pager.js"></script>
	<script src="js/jqx/jqxgrid.selection.js"></script>
	<script src="js/jqx/jqxgrid.sort.js"></script>
	<script src="js/jqx/jqxdata.js"></script>
	<script src="js/jqx/jqxscrollbar.js"></script>
	<script src="js/jqx/jqxcheckbox.js"></script>
	<script src="js/jqx/jqxinput.js"></script>
<head>
	<meta charset="ISO-8859-1">
	<title>CSCSP Data Management</title>
</head>
<body>
	<a href="http://localhost:8080/CSCSPMonitor/">Home</a>
	<br/>
	<div id="jqxgrid"></div>
	<br/>
	<input id="jqxbuttonSearch" type="button" value="Refresh" />
	&nbsp;
	<input id="jqxbuttonBitcoinChartsDownloader" type="button" value="BitcoinCharts Downloader" />
	&nbsp;
	<input id="jqxbuttonRealtimeDownloader" type="button" value="Realtime Downloader" />
	&nbsp;
	<input id="jqxbuttonUpdateMetrics" type="button" value="Update Metrics" />
	<div id="jqxlistboxArchives"></div>
	
<script>
	$(document).ready(function () {
	    // jqxgrid
		var source =
	    {
			datatype: "json",
	    	method: "POST",	        
	        url: "DataServlet"
	    };
	    
	    var dataAdapter = new $.jqx.dataAdapter(source, {
	    	autoBind: true,
	    	formatData: function (data) {
	    		return data;
	    	},
	    	downloadComplete: function (data) {
	    		var columns = data[0].columns;
	    		var rows = data[1].rows;
	    		
	    		for (var a = 0; a < columns.length; a++) {
	    			columns[a]["cellsrenderer"] = cellsrenderer;
	    			columns[a]["cellclassname"] = cellclassname;
	    		}
	    		
	    		var gridAdapter = new $.jqx.dataAdapter({
	    			id: "id",
	    			localdata: rows
	    		});
	    		$("#jqxgrid").jqxGrid('hideloadelement');
	    		$("#jqxgrid").jqxGrid('beginupdate', true);
	    		$("#jqxgrid").jqxGrid({
	    			source: gridAdapter,
	    			columns: columns,
	    		});
	    		$("#jqxgrid").jqxGrid('endupdate');
	    	}
	    });
	    
	    var cellsrenderer = function (row, columnfield, value, defaulthtml, columnproperties, rowdata) {
	    }
	    
	    var bcdSearching = false;
        var cellclassname = function (row, columnfield, value) {
        	var gridRowIndexes = $("#jqxgrid").jqxGrid('getselectedrowindexes');
	    	for (var a = 0; a < gridRowIndexes.length; a++) {
	    		if (row === gridRowIndexes[a]) {
	                if (bcdSearching == true) {
	                    return "green";
	                }
	    		}
            }
        }

	    
	    $("#jqxgrid").jqxGrid(
	    {
	    	source: dataAdapter,
	        width: 1400,
	        altrows: true,
	        autoheight: true,
	        selectionmode: 'checkbox',
	        columnsresize: true,
	        rowsheight: 20,
	        pageable: true,
	        pagesizeoptions: ['20', '50', '100'],
	        pagesize: 20,
	        sortable: true
	    });
	    $("#jqxgrid").jqxGrid('showloadelement');
	    
	    // Events
	    $("#jqxgrid").on('bindingcomplete', function (event) {
	    	$("#jqxgrid").jqxGrid('hideloadelement');
	    })
	    
		// jqxbuttonSearch   
		$("#jqxbuttonSearch").jqxButton({ width: '200'});
	    $("#jqxbuttonSearch").on('click', function () {
	    	dataAdapter.dataBind();
	    	$("#jqxgrid").jqxGrid('updatebounddata');
	    	$("#jqxgrid").jqxGrid('showloadelement');
        });

	 	// jqxbuttonBitcoinChartsDownloader   
		$("#jqxbuttonBitcoinChartsDownloader").jqxToggleButton({ width: '200'});
	    $("#jqxbuttonBitcoinChartsDownloader").on('click', function () {
	    	bcdSearching = true;
	    	var archiveSymbols = [];
	    	var archiveDurations = [];
	    	
	    	var gridRowIndexes = $("#jqxgrid").jqxGrid('getselectedrowindexes');
	    	for (var a = 0; a < gridRowIndexes.length; a++) {
	    		var rowData = $("#jqxgrid").jqxGrid('getrowdata', gridRowIndexes[a]);
	    		archiveSymbols[a] = rowData.symbol;
	    		archiveDurations[a] = rowData.duration;
	    	}
	    	
	    	$("#jqxgrid").jqxGrid("refresh");
	    	//$("#jqxgrid").jqxGrid("clearselection");
	    	
	    	$.ajax({
	    		dataType: 'json',
	    		url: 'BitcoinChartsServlet',
	    		method: 'POST',
	    		data: {
	    			archiveSymbols : archiveSymbols,
	    			archiveDurations : archiveDurations
	    		},
	    		success: function (data) {
	    			$('#jqxbuttonBitcoinChartsDownloader').jqxToggleButton('toggle'); 
	    			dataAdapter.dataBind();
	    			bcdSearching = false;
	    	    	$("#jqxgrid").jqxGrid('updatebounddata');
	    	    	$("#jqxgrid").jqxGrid('showloadelement');
	    	    	$("#jqxgrid").jqxGrid("clearselection");
	    		}
	    	});
	    	
        });
	    
	    // jqxbuttonRealtimeDownloader
	    $("#jqxbuttonRealtimeDownloader").jqxButton({ width: '200'});
	    
	    // jqxbuttonUpdateMetrics
	    $("#jqxbuttonUpdateMetrics").jqxButton({ width: '200'});
	    
	    // jqxlistboxArchives
	    /*
	    var archives = ["bitfinexUSD.csv.gz", "bitstampUSD.csv.gz", "btceUSD.csv.gz", "krakenEUR.csv.gz", "krakenUSD.csv.gz", "okcoinCNY.csv.gz"];
	    $("#jqxlistboxArchives").jqxListBox({ source: archives, multiple: true, width: 220, height: 152});
	    for (var a = 0; a < $("#jqxlistboxArchives").jqxListBox('getItems').length; a++) {
	    	$("#jqxlistboxArchives").jqxListBox('selectIndex', a);
	    } 
	    */
	});

</script>

</body>
</html>